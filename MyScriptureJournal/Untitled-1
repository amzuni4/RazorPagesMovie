namespace MvcMovie.Controllers
{



public class MoviesController : Controller

{


private readonly MvcMovieContext _context;








public MoviesController(MvcMovieContext context)



{



_context = context;



}








// GET: Movies



// Requires using Microsoft.AspNetCore.Mvc.Rendering;



public async Task<IActionResult> Index(string movieGenre, string searchString, string sortOrder)



{



// Use LINQ to get list of genres.



IQueryable<string> genreQuery = from m in _context.Movie



orderby m.Genre



select m.Genre;








var movies = from m in _context.Movie



select m;








if (!String.IsNullOrEmpty(searchString))



{



movies = movies.Where(s => s.Title.Contains(searchString));



}








if (!String.IsNullOrEmpty(movieGenre))



{



movies = movies.Where(x => x.Genre == movieGenre);



}








switch (sortOrder)



{



case "ReleaseDate":



movies = movies.OrderByDescending(s => s.ReleaseDate);



break;



}








var movieGenreVM = new MovieGenreViewModel();



movieGenreVM.Genres = new SelectList(await genreQuery.Distinct().ToListAsync());
movieGenreVM.Movies = await movies.ToListAsync();

movieGenreVM.SearchString = searchString;

return View(movieGenreVM);



}


